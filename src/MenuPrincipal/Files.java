package MenuPrincipal;


import GameLogic.GameLogic;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author aaa
 */
public class Files extends javax.swing.JFrame {

    /**
     * Creates new form Choosing
     */
    private Clip clip;
    static String[] names1 = {};
    static String namesTemporal;
    public ArrayList<String> datos;
    ArrayList<String> namesImported;

    private ArrayList<String> cargarPartida(String Path) {
        try {
            //Creamos un objeto con el archivo que queremos leer
            File lectura = new File(Path);
            //Creamos un scanner que nos va a ayudar con la lectura de los datos
            Scanner reader = new Scanner(lectura);
            //Creamos un while que lea cada una de las lineas del texto
            while (reader.hasNextLine()) {
                namesTemporal = reader.nextLine();
            }
            //Debido a la forma que se importa con los corchetes eliminamos el primer y el ultimo caracter
            String trimmed = namesTemporal.substring(1, namesTemporal.length() - 1);
            //Despues a un Array le agregamos cada uno de los valores que se encuentran separados por una coma y un espacio debido a la forma
            //que se importa del txt
            names1 = trimmed.split(", ");
            //Creamos la lista dinámica a la cual se van a agregar dichos datos
            namesImported = new ArrayList<>();
            //Agregamos todos los datos del Array a la lista dinamica con el siguiente método
            namesImported.addAll(Arrays.asList(names1));
            //Lo anterior se puede eficientar de la siguiente manera [namesImported.addAll(Arrays.asList(trimmed.split(", "));]

        } catch (FileNotFoundException e) {
            System.out.println("File not Found");
        }
        return namesImported;
    }

    private void reproducirSonidos(String rutaArchivo) {
        try {
            // Abrir el archivo de audio como un stream de entrada
            AudioInputStream audioStream = AudioSystem.getAudioInputStream(new File(rutaArchivo));

            // Obtener un clip de sonido
            clip = AudioSystem.getClip();

            // Abrir el clip con el stream de audio
            clip.open(audioStream);
            clip.loop(Clip.LOOP_CONTINUOUSLY);
            clip.start();
        } catch (UnsupportedAudioFileException | IOException | LineUnavailableException e) {
            e.printStackTrace();
        }
    }

    public Files() {
        initComponents();
        reproducirSonidos("src/Musica/MenuPrincipal.wav");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        File1 = new javax.swing.JButton();
        File2 = new javax.swing.JButton();
        File3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        Background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MenuImages/SELECTFile.png"))); // NOI18N
        jPanel1.add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 50, 330, 40));

        File1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MenuImages/File1.png"))); // NOI18N
        File1.setBorder(null);
        File1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File1ActionPerformed(evt);
            }
        });
        jPanel1.add(File1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 220, -1, 40));

        File2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MenuImages/File2.png"))); // NOI18N
        File2.setBorder(null);
        File2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File2ActionPerformed(evt);
            }
        });
        jPanel1.add(File2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 310, -1, 40));

        File3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MenuImages/File3.png"))); // NOI18N
        File3.setBorder(null);
        File3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                File3ActionPerformed(evt);
            }
        });
        jPanel1.add(File3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 400, 170, 40));

        jButton1.setText("Regresar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 30, -1, -1));

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/MenuImages/ChBackUni.jpg"))); // NOI18N
        Background.setText("jLabel1");
        jPanel1.add(Background, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, 0, 770, 560));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void File1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File1ActionPerformed
        File archivo1 = new File("src/Guardados/1.txt");
        String path = "src/Guardados/1.txt";
        if (archivo1.exists()) {
            int respuesta = JOptionPane.showConfirmDialog(this, "Do you want to overwrite it?", "Save file already used", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                int fileNumber = 1;
                Register user = new Register(fileNumber);
                user.setVisible(true);
                this.dispose();
                user.setLocationRelativeTo(null);
                archivo1.delete();
                clip.stop();
            } else {
                datos = cargarPartida(path);
                new GameLogic(datos).setVisible(true);
                System.out.println(datos);
                clip.stop();
            }

        } else {
            int fileNumber = 1;
            Register user = new Register(fileNumber);
            user.setVisible(true);
            this.dispose();
            user.setLocationRelativeTo(null);
            clip.stop();
        }
    }//GEN-LAST:event_File1ActionPerformed

    private void File2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File2ActionPerformed
        // TODO add your handling code here:
        File archivo1 = new File("src/Guardados/2.txt");
        String path = "src/Guardados/2.txt";
        if (archivo1.exists()) {
            int respuesta = JOptionPane.showConfirmDialog(this, "Do you want to overwrite it?", "Save file already used", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                int fileNumber = 2;
                Register user = new Register(fileNumber);
                user.setVisible(true);
                this.dispose();
                user.setLocationRelativeTo(null);
                archivo1.delete();
                clip.stop();
            } else {
                datos = cargarPartida(path);
                new GameLogic(datos).setVisible(true);
                System.out.println(datos);
                clip.stop();
            }

        } else {
            int fileNumber = 2;
            Register user = new Register(fileNumber);
            user.setVisible(true);
            this.dispose();
            user.setLocationRelativeTo(null);
            clip.stop();
        }
    }//GEN-LAST:event_File2ActionPerformed

    private void File3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_File3ActionPerformed
        // TODO add your handling code here:
        File archivo1 = new File("src/Guardados/3.txt");
        String path = "src/Guardados/3.txt";
        if (archivo1.exists()) {
            int respuesta = JOptionPane.showConfirmDialog(this, "Save file already used", "Do you want to overwritte?", JOptionPane.YES_NO_OPTION);
            if (respuesta == JOptionPane.YES_OPTION) {
                int fileNumber = 3;
                Register user = new Register(fileNumber);
                user.setVisible(true);
                this.dispose();
                user.setLocationRelativeTo(null);
                clip.stop();
            } else {
                datos = cargarPartida(path);
                new GameLogic(datos).setVisible(true);
                System.out.println(datos);
                clip.stop();
            }

        } else {
            int fileNumber = 3;
            Register user = new Register(fileNumber);
            user.setVisible(true);
            this.dispose();
            user.setLocationRelativeTo(null);
            clip.stop();
        }
    }//GEN-LAST:event_File3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        new MenuPrincipal().setVisible(true);
        clip.stop();
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Files.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Files().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JButton File1;
    private javax.swing.JButton File2;
    private javax.swing.JButton File3;
    private javax.swing.JLabel Title;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
